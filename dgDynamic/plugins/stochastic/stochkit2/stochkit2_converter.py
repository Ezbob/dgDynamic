import io

INDENT_SPACES = 4


def i(message, level):
    return "{}{}".format(_indent(level), message)


def _indent(indent_level):
    return ' ' * (indent_level * INDENT_SPACES)


def _mass_action_reaction(stream, id, rate, reactants, products, indent=0):
    stream.write(i('<Reaction>\n', indent))
    stream.write(i('<Id>{}</Id>\n'.format(id), indent + 1))
    stream.write(i('<Type>mass-action</Type>\n', indent + 1))
    stream.write(i('<Rate>{}</Rate>\n'.format(rate), indent + 1))
    stream.write(i('<Reactants>\n', indent + 1))
    for reactant in reactants:
        react_id, stoichiometry = reactant
        stream.write(i('<SpeciesReference id="{}" stoichiometry="{}"/>\n'.format(
            react_id, stoichiometry
        ), indent + 2))
    stream.write(i('</Reactants>\n', indent + 1))
    stream.write(i('<Products>', indent + 1))
    for product in products:
        product_id, stoichiometry = product
        stream.write(i('<SpeciesReference id="{}" stoichiometry="{}"/>\n'.format(
            product_id, stoichiometry
        ), indent + 2))
    stream.write(i('</Products>', indent + 1))
    stream.write(i('</Reaction>\n', indent))


def generate_model(simulator):

    with io.StringIO() as model_string:
        model_string.write('<!--- StochKit2 model generated by dgDynamic --->\n')
        model_string.write('<Model>\n')
        generate_preamble(model_string, simulator.reaction_count,
                          simulator.species_count, indent=1)
        generate_rate_equations(model_string, indent=1)
        generate_species_list(model_string, indent=1)
        model_string.write('</Model>')
        return model_string.getvalue()


def generate_preamble(stream, reaction_count, species_count, indent=0):
    stream.write(i("<NumberOfReactions>{}</NumberOfReactions>\n".format(reaction_count), indent))
    stream.write(i("<NumberOfSpecies>{}</NumberOfSpecies>\n".format(species_count), indent))


def generate_rate_equations(stream, indent=0):
    stream.write(i('<ReactionsList>\n', indent))

    stream.write(i('</ReactionsList>\n', indent))


def generate_species_list(stream, indent=0):
    stream.write(i('<SpeciesList>\n', indent))

    stream.write(i('</SpeciesList>\n', indent))
